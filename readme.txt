This package is built around two external objects for generating second-order Markov chains: gtm.markov and gtm.markov~. gtm.markov is an event-based object that calculates new output values upon receipt of a bang at its middle inlet, while gtm.markov~ is the signal-based counterpart to gtm.markov and calculates new output values upon phase reset of an incoming phasor/ramp signal arriving at its middle inlet. Both objects receive a list of integers in the range of 0-127 and up to 128 elements in length at their leftmost inlet, from which the internal transition matrix is compiled. Sending a new list of integers into the leftmost inlet overwrites the previously stored transition matrix. A bang received at the rightmost inlet of both objects resets the generation of values without clearing the internally stored transition matrix.

Due to the time taken for note/value generation, gtm.markov~ introduces a single sample vector of latency to the signal path. For convenience when combining gtm.markov~ with objects such as mc.midiplayer~, which requires both a MIDI note number and phasor/ramp input signal (with @triggermode 0) to generate note output, the phasor/ramp input signal sent to the middle inlet of gtm.markov~ is subject to a single sample vector delay inside the object before being released from the leftmost outlet.

In addition to the external objects themselves, this package contains a number of example patchers, as well as RNBO-based versions of the same example patchers and accompanying video tutorials detailing how the externals were developed and compiled using RNBO and codebox.